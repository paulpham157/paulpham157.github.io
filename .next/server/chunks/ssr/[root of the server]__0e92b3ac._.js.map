{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_59dee874.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_59dee874-module__9CtR0q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/paulpham157/Projects/paulpham157.github.io/src/app/components/GoogleTagManager.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GoogleTagManager = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleTagManager() from the server but GoogleTagManager is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/GoogleTagManager.tsx <module evaluation>\",\n    \"GoogleTagManager\",\n);\nexport const GoogleTagManagerNoScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleTagManagerNoScript() from the server but GoogleTagManagerNoScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/GoogleTagManager.tsx <module evaluation>\",\n    \"GoogleTagManagerNoScript\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yEACA;AAEG,MAAM,2BAA2B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,yEACA","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/paulpham157/Projects/paulpham157.github.io/src/app/components/GoogleTagManager.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GoogleTagManager = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleTagManager() from the server but GoogleTagManager is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/GoogleTagManager.tsx\",\n    \"GoogleTagManager\",\n);\nexport const GoogleTagManagerNoScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleTagManagerNoScript() from the server but GoogleTagManagerNoScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/GoogleTagManager.tsx\",\n    \"GoogleTagManagerNoScript\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qDACA;AAEG,MAAM,2BAA2B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,qDACA","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/paulpham157/Projects/paulpham157.github.io/src/app/layout.tsx"],"sourcesContent":["import React from 'react'\nimport type { Metadata } from 'next'\nimport { Inter } from 'next/font/google'\nimport { GoogleTagManager, GoogleTagManagerNoScript } from './components/GoogleTagManager'\nimport './globals.css'\n\nconst inter = Inter({ subsets: ['latin'] })\n\nexport const metadata: Metadata = {\n  title: 'Phạm Đình Hùng - Personal Portfolio',\n  description: 'Software Developer based in Hanoi, Vietnam',\n}\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"vi\">\n      <head>\n        <title>Phạm Đình Hùng - Personal Portfolio</title>\n        <meta name=\"description\" content=\"Software Developer based in Hanoi, Vietnam\" />\n      </head>\n      <body className={inter.className}>\n        <GoogleTagManager />\n        <GoogleTagManagerNoScript />\n        {children}\n      </body>\n    </html>\n  )\n} "],"names":[],"mappings":";;;;;;AAGA;;;;;AAKO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;;0BACT,8OAAC;;kCACC,8OAAC;kCAAM;;;;;;kCACP,8OAAC;wBAAK,MAAK;wBAAc,SAAQ;;;;;;;;;;;;0BAEnC,8OAAC;gBAAK,WAAW,yIAAA,CAAA,UAAK,CAAC,SAAS;;kCAC9B,8OAAC,6IAAA,CAAA,mBAAgB;;;;;kCACjB,8OAAC,6IAAA,CAAA,2BAAwB;;;;;oBACxB;;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/paulpham157/Projects/paulpham157.github.io/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}